class Product:
    __MAX_ID = 0 # Приватная (Инкапсулированная) переменная-атрибут класса для счёта id
    def __init__(self, name, category):
        self.name = name # обьявляем атрибут класса self.name присваивая ему значение переданного аргумента name
        self.category = category # аналогично тому что выше 
        self.id = Product.__MAX_ID # Присваиваем аттрибуту self.id значение класса product.__MAX_ID (Описанно выше)
        Product.__MAX_ID += 1 # увеличиваем глобальный классовы атрибут на 1 (что бы следующий id был больше на 1 и не повторялся)


products = [Product('Зубки','Зубная Паста'), Product('Детям','Зубаня щётка')] # создаём обьекты класса
print(*[ # их вывод через краткий for (о нём подробнее можно узанать у меня или в закреалённой статье)
    product.name # обращение к полю name 
    for product in products # обьявляем product вытягивая его из списка products
    if len(product.name) > 2 # проверяем если количество буков в product.name > 2 если да выполняем строку которая выше.
], sep='\n') # делим вывод на разные строки в консоли